<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Psalm Tone Tool</title>
	<script type="text/javascript" src="jquery.min.js"></script>
  <!--<script src="https://github.com/jamespadolsey/jQuery-Plugins/raw/master/cross-domain-ajax/jquery.xdomainajax.js"></script>-->
	
	<script type="text/javascript">var _local = true;</script>
  <script src="jgabc.js" type="text/javascript"></script>
	<script src="psalmtone.js" type="text/javascript"></script>
</head>
<body>
<a href="transcriber.html">GABC Transcription Tool</a>
<br/><br/>
<style>
.latex {
  font-family: Times, "Times New Roman", serif;	
  letter-spacing: 1px;
}

.latex sup {
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.85em;
  vertical-align: 0.15em;
  margin-left: -0.36em;
  margin-right: -0.15em;
}

.latex sub {
  text-transform: uppercase;
  vertical-align: -0.5ex;
  margin-left: -0.1667em;
  margin-right: -0.125em;
  font-size: 1em;
}
table.bordered {
  width:100%;
}
table {
  border-collapse:collapse;
}
tr.bordered>td {
  vertical-align:top;
  border-width:1px;
  border-style:solid;
}
</style>
<table class="bordered"><tr class="bordered"><td>Tone: <select id="selTones"></select><select id="selEnd"></select><input type="checkbox" id="cbSolemn" name="solemn"/><label for="cbSolemn">Solemn Tone</label><br/>
Clef: <input type="text" id="txtClef" style="width:15pt"/><br/>
Psalm GABC<br/><textarea id="versegabc" style="height: 24pt; width: 95%;">g hj jr 'k jr jr 'ih j.&#10;j jr h 'j jr ih..</textarea>
<br/>Mediant of <span id="sMedAccent"></span> accent<span id="sMedAccentS">s</span><span id="sMedPrepOuter"> with <span id="sMedPrep"></span> preperatory syllable<span id="sMedPrepS">s</span></span>
<br/>Termination of <span id="sTermAccent"></span> accent<span id="sTermAccentS">s</span><span id="sTermPrepOuter"> with <span id="sTermPrep"></span> preperatory syllable<span id="sTermPrepS">s</span></span>
</td><td>Psalm <select id="selPsalm"></select> <input type="checkbox" id="cbIncludeGloriaPatri"/><label for="cbIncludeGloriaPatri">Include Glória Pátri</label><br/><textarea id="versetext" style="height: 96pt; width: 95%;"></textarea>
</td></tr>
<tr class="bordered"><td>
Format verses as: <select id="selFormat"></select><input type="button" id="btnDelFormat" value="Delete Current Format"/><input type="button" id="btnNewFormat" value="Create New Format"/>
<br/><input type="checkbox" id="cbOnlyVowels"/><label for="cbOnlyVowels">Only format vowels</label>
<br/>Prefix: <input type="text" id="txtPrefix"/>&nbsp;&nbsp;Suffix: <input type="text" id="txtSuffix"/>
</td><td style="border-left-style:solid;">
<table class="">
<tr><td>Begin Preparatory Syllable:</td><td><input type="text" id="txtBeginPrep"/></td>
<td style="padding-left:12pt;">End Preparatory Syllable:</td><td><input type="text" id="txtEndPrep"/></td></tr>
<tr><td>Begin Accented Syllable:</td><td><input type="text" id="txtBeginAccented"/></td>
<td style="padding-left:12pt;">End Accented Syllable:</td><td><input type="text" id="txtEndAccented"/></td></tr>
</table>
</td></tr>
</table>
<br/>GABC<br/><textarea id="editor" style="height: 100; width: 95%;"></textarea>
<div height="50%" id="chant-preview" style="width: 95%">
</div>
<div id="verses" style="width: 95%; padding: 0px 6pt; font-family: 'OFL Sorts Mill Goudy TT';font-size:18px"></div>
<script>
if(location.search.match(/dominican/i))g_tones=d_tones;
var gSyl,syl,_clef;
var last_syl,last_gSyl;
var last_lines,last_gabcs,last_terTones,last_medTones;
var g_prefix, g_suffix;
var useFormat,onlyVowels,gabcFormat;
function updateEditor(forceGabcUpdate) {
  if(!gSyl) gSyl = $("#versegabc")[0].value;
  if(!syl) syl = $("#versetext")[0].value;
  var sameSyl = (syl == last_syl);
  var sameGSyl = (gSyl == last_gSyl);
  var lines = sameSyl? last_lines : syl.split('\n');
  var gabcs = sameGSyl? last_gabcs : gSyl.split('\n');
  var gMediant = gabcs[0];
  var gTermination = gabcs.length == 1? "" : gabcs[1];
  var gabc;
  if(!sameSyl || !sameGSyl || forceGabcUpdate) {
    var firstLine = splitLine(lines[0]);
    gabc = "(" + _clef + ")" + ((g_prefix && g_prefix.replace(/\$c/gi,String(1))) || "")
      + applyPsalmTone(firstLine[0].trim(),gMediant,true,true,onlyVowels,gabcFormat) + (firstLine.length == 1? "" : " *(:) " + applyPsalmTone(firstLine[1].trim(),gTermination,true,true,onlyVowels,gabcFormat) + " (::)");
    var flex = (firstLine[0].indexOf(sym_flex) >= 0);
    last_lines = lines;
  }
  var medTones, terTones;
  if(sameGSyl) {
    medTones = last_medTones;
    terTones = last_terTones;
  } else {
    medTones = getGabcTones(gMediant);
    terTones = getGabcTones(gTermination);
    $("#sMedAccent")[0].innerText = String(medTones.accents);
    $("#sMedAccentS")[0].innerText = (medTones.accents == 1)? "" : "s";
    if(medTones.preparatory == 0) {
      $("#sMedPrepOuter").hide();
    } else {
      $("#sMedPrep")[0].innerText = String(medTones.preparatory);
      $("#sMedPrepS")[0].innerText = (medTones.preparatory == 1)? "" : "s";
      $("#sMedPrepOuter").show();
    }
    if(gTermination) {
    $("#sTermAccent")[0].innerText = String(terTones.accents);
      $("#sTermAccentS")[0].innerText = (terTones.accents == 1)? "" : "s";
      if(terTones.preparatory == 0) {
        $("#sTermPrepOuter").hide();
      } else {
        $("#sTermPrep")[0].innerText = String(terTones.preparatory);
        $("#sTermPrepS")[0].innerText = (terTones.preparatory == 1)? "" : "s";
        $("#sTermPrepOuter").show();
      }
    }
    last_gabcs = gabcs;
    last_medTones = medTones;
    last_terTones = terTones;
  }
  var r = [];
  var asCode = !useFormat.match(/html/i);
  var asGabc = useFormat.match(/gabc/i);
  if(asCode) r.push("<code>");
  for(var i=1; i<lines.length; ++i) {
    var line = splitLine(lines[i]);
    if(!asGabc) {
      if(gabc && !flex) {
        var flexI = line[0].indexOf(sym_flex);
        if(flexI >= 0) {
          var syls = getSyllables(line[0].slice(0,flexI));
          var index = syls.length - 1;
          syls[index].punctuation += ' ' + sym_flex;
          syls[index].space = "";
          var sylcount = syls[index].word.length;
          index -= sylcount - 1;
          while((syls.length - index) < 3) {
            --index;
            sylcount = syls[index].word.length;
            index -= sylcount - 1;
          }
          syls.splice(0,index);
          gabc += "<i>Flex :</i>() " + applyPsalmTone(syls,getFlexGabc(medTones),false,false,onlyVowels,gabcFormat);
          gabc = gabc.slice(0,-1) + new Array(4).join(" " + medTones.toneTenor) + "  ::)";
          flex = true;
        }
      }
      r.push("<p style='margin: 6pt 0px;'>" +
      //"<span style='float:left;width:25pt;text-align:right;'>" + String(i + 1) + ".&nbsp;</span>"
      ((g_prefix && g_prefix.replace(/\$c/gi,String(i+1))) || "")
        + addBoldItalic(line[0], medTones.accents, medTones.preparatory, medTones.afterLastAccent, useFormat, onlyVowels)
        + (line.length == 1? "" : " * " + addBoldItalic(line[1], terTones.accents, terTones.preparatory, terTones.afterLastAccent, useFormat, onlyVowels))
        + ((g_suffix && g_suffix.replace(/$c/gi,String(i+1))) || "") + "</p>");
    } else {
      gabc += ((g_prefix && g_prefix.replace(/\$c/gi,String(i+1))) || "")
        + applyPsalmTone(line[0].trim(),gMediant,true,true,onlyVowels,gabcFormat) + (line.length == 1? "" : " *(:) " + applyPsalmTone(line[1].trim(),gTermination,true,true,onlyVowels,gabcFormat) + " (::)");
    }
  }
  if(asCode) r.push("</code>");
  if(gabc) {
    try {
      gabc += "\n\n" + applyPsalmTone(gloria_patri_end_vowels,gTermination,false,false,onlyVowels,gabcFormat);
    } catch(e) { }
    $("#editor")[0].value = gabc;
    $("#editor").keyup();
  }
  $("#verses")[0].innerHTML = r.join('');
  last_syl = syl;
  last_gSyl = gSyl;
}

function updateGabc() {
  gSyl = $("#versegabc")[0].value;
  updateEditor();
}

function updateText() {
  syl = $("#versetext")[0].value;
  updateEditor();
}

function updateEndings() {
  $("#selEnd").empty();
  var tone = $("#selTones")[0].value;
  localStorage.selTones = tone;
  var endings = getEndings(tone);
  var t = g_tones[tone];
  _clef = t.clef;
  var vgabc = $("#cbSolemn")[0].checked? t.solemn : t.mediant;
  if(vgabc == undefined) vgabc = t.mediant;
  vgabc += "\n";
  if(endings.length == 0) {
    vgabc += t.termination;
  } else {
	$("#selEnd").append('<option>' + endings.join('</option><option>') + '</option>');
	vgabc += t.terminations[$("#selEnd")[0].value];
  }
  $("#selEnd")[0].disabled = (endings.length <= 1);
  $("#versegabc")[0].value = vgabc;
  $("#txtClef")[0].value = t.clef;
  gSyl = vgabc;
  updateEditor();
}

function updateEnding() {
  var tone = $("#selTones")[0].value;
  var selEnd = $("#selEnd")[0].value;
  var solemn = $("#cbSolemn")[0].checked;
  localStorage.selEnd = selEnd;
  localStorage.cbSolemn = solemn;
  var t = g_tones[tone];
  var vgabc = solemn? t.solemn : t.mediant;
  if(vgabc == undefined) vgabc = t.mediant;
  if(t.terminations) {
    vgabc += "\n" + t.terminations[selEnd];
  } else {
    vgabc += "\n" + t.termination;
  }
  $("#versegabc")[0].value = vgabc;
  $("#txtClef")[0].value = t.clef;
  gSyl = vgabc;
  updateEditor();
}

function getPsalms() {
  var r = Array(151);
  for(var i=1; i <= 150; ++i) {
    r[i-1] = i;
  }
  r[150] = "Magnificat";
  r[151] = "Benedictus"
  return r;
}

function updatePsalm() {
  var psalmNum = $("#selPsalm")[0].value;
  localStorage.selPsalm = psalmNum;
  var includeGloriaPatri = $("#cbIncludeGloriaPatri")[0].checked;
  localStorage.cbIncludeGloriaPatri = includeGloriaPatri;
  getPsalm(psalmNum,includeGloriaPatri,function(text) {
    var vt = $("#versetext");
    vt[0].value = text;
    //vt.css("height","48pt");
    //vt.css("height",vt[0].scrollHeight);
    updateText();
  });
}

function updatePrefix() {
  g_prefix = $("#txtPrefix")[0].value;
  localStorage.txtPrefix = g_prefix;
  updateEditor();
}

function updateSuffix() {
  g_suffix = $("#txtSuffix")[0].value;
  localStorage.txtSuffix = g_suffix;
  updateEditor();
}

function updateClef() {
  var clef = $("#txtClef")[0].value;
  if(clef.length < 2)return;
  var baseClefI = parseInt(_clef[1],10);
  var clefI = parseInt(clef[1],10);
  var diff = (clefI - baseClefI) * 2;
  var vgabc = gSyl;
  var newGabc = [];
  for(var i=vgabc.length - 1; i>=0; --i) {
    var c = vgabc[i];
    if(parseInt(c,23)>9)newGabc.push(String.fromCharCode(c.charCodeAt(0) + diff));
      else newGabc.push(c);
  }
  vgabc = newGabc.reverse().join("");
  $("#versegabc")[0].value = vgabc;
  gSyl = vgabc;
  _clef = clef;
  updateEditor();
}

function updateFormat() {
  var oldGabcFormat = gabcFormat;
  var oldFormat = useFormat;
  useFormat = $("#selFormat").val();
  gabcFormat = bi_formats["gabc-" + useFormat.slice(useFormat.lastIndexOf("-")+1)];
  localStorage.selFormat = useFormat;
  $("#btnDelFormat").val(((useFormat in o_bi_formats)? "Reset" : "Delete") + " Current Format");
  var f = bi_formats[useFormat];
  $("#txtBeginPrep").val(f.italic[0]);
  $("#txtEndPrep").val(f.italic[1]);
  $("#txtBeginAccented").val(f.bold[0]);
  $("#txtEndAccented").val(f.bold[1]);
  updateEditor((JSON.stringify(gabcFormat) != JSON.stringify(oldGabcFormat)) || useFormat.match(/gabc(?=$|-)/) || oldFormat.match(/gabc(?=$|-)/));
}
function storeBiFormatsAndUpdate() {
  localStorage.bi_formats = JSON.stringify(bi_formats);
  updateEditor(useFormat.match(/gabc(?=$|-)/));
}
function updateBeginAccented() {
  bi_formats[useFormat].bold[0] = $("#txtBeginAccented").val();
  storeBiFormatsAndUpdate();
}
function updateEndAccented() {
  bi_formats[useFormat].bold[1] = $("#txtEndAccented").val();
  storeBiFormatsAndUpdate();
}
function updateBeginPrep() {
  bi_formats[useFormat].italic[0] = $("#txtBeginPrep").val();
  storeBiFormatsAndUpdate();
}
function updateEndPrep() {
  bi_formats[useFormat].italic[1] = $("#txtEndPrep").val();
  storeBiFormatsAndUpdate();
}

function newFormat() {
  var name = prompt("Please enter a name for the new custom format");
  while(name.length>0 && name in bi_formats) {
    name = prompt("There is already a format named '" + name + "'.  Please enter a new name.");
  }
  if(name.length > 0) {
    bi_formats[name] = {italic:["(",")"],bold:["[","]"]};
    $("#selFormat").append('<option>' + name + '</option>');
    $("#selFormat").val(name);
    updateFormat();
  }
}
function deleteFormat() {
  var onlyReset = (useFormat in o_bi_formats);
  var q = "Really " + (onlyReset?"reset":"delete") + " the format '" + useFormat + "'?";
  if(confirm(q)) {
    if(onlyReset) {
      bi_formats[useFormat] = $.extend(true,{},o_bi_formats[useFormat]);
    } else {
      delete bi_formats[useFormat];
      var sel = $("#selFormat")[0];
      $(sel.childNodes[sel.selectedIndex]).remove();
    }
    localStorage.bi_formats = JSON.stringify(bi_formats);
    updateFormat();
  }
}

function updateOnlyVowels() {
  localStorage.cbOnlyVowels = onlyVowels = $("#cbOnlyVowels")[0].checked;
  updateEditor(true);
}

$(function() {
//g_tones = d_tones;
  if(localStorage.bi_formats) {
    bi_formats = JSON.parse(localStorage.bi_formats);
    for(i in o_bi_formats) {
      if(!(i in bi_formats)) {
        bi_formats[i] = o_bi_formats[i];
      }
    }
  }
  $("#selTones").append('<option>' + getPsalmTones().join('</option><option>') + '</option>');
  $("#selPsalm").append('<option>' + getPsalms().join('</option><option>') + '</option>');
  $("#selFormat").append('<option>' + getKeys(bi_formats).join('</option><option>') + '</option>');
  $("#versegabc").keyup(updateGabc);
  $("#versetext").keyup(updateText);
  $("#selTones").change(updateEndings);
  $("#selTones").keyup(updateEndings);
  $("#cbSolemn").change(updateEnding);
  $("#cbOnlyVowels").change(updateOnlyVowels);
  $("#selFormat").change(updateFormat);
  $("#selFormat").keyup(updateFormat);
  $("#selEnd").change(updateEnding);
  $("#selEnd").keyup(updateEnding);
  $("#selPsalm").change(updatePsalm);
  $("#txtPrefix").keyup(updatePrefix);
  $("#txtSuffix").keyup(updateSuffix);
  $("#txtClef").keyup(updateClef);
  $("#btnNewFormat").click(newFormat);
  $("#btnDelFormat").click(deleteFormat);
  if(_local) $("#selPsalm").keyup(updatePsalm);
  $("#cbSolemn")[0].checked = (localStorage.cbSolemn == "true");
  $("#cbOnlyVowels")[0].checked = onlyVowels = (localStorage.cbOnlyVowels == "true");
  $("#selFormat")[0].value = useFormat = localStorage.cbTeX? "tex" : (localStorage.selFormat || "html");
  $("#selPsalm")[0].value = localStorage.selPsalm || "Magnificat";
  $("#selTones")[0].value = localStorage.selTones || "1";
  $("#txtBeginPrep").keyup(updateBeginPrep);
  $("#txtEndPrep").keyup(updateEndPrep);
  $("#txtBeginAccented").keyup(updateBeginAccented);
  $("#txtEndAccented").keyup(updateEndAccented);
  $("#cbIncludeGloriaPatri").change(updatePsalm);
  g_prefix = $("#txtPrefix")[0].value = localStorage.txtPrefix || "$c. ";
  g_suffix = $("#txtSuffix")[0].value = localStorage.txtSuffix || "";
  $("#cbIncludeGloriaPatri")[0].checked = (localStorage.cbIncludeGloriaPatri != "false")
  updateEndings();
  if(("#selEnd")[0].firstChild) $("#selEnd")[0].value = localStorage.selEnd || $("#selEnd")[0].firstChild.innerText;
  updateEnding();
  updatePsalm();
  updateFormat();
  localStorage.removeItem("cbTeX");
});
</script>
</body>
</html>